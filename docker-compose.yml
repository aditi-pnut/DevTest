version: "3.8"

services:
  frontend:
    image: 878239241975.dkr.ecr.us-east-2.amazonaws.com/theomnilife-frontend-dummy:${FRONTEND_TAG}
#    image: 878239241975.dkr.ecr.us-east-2.amazonaws.com/theomnilife-frontend-dummy:latest
    container_name: web_angular
    restart: always
    env_file:
      - ./config.env
      - ./db.env
    networks:
      - my_network
    logging:
      driver: awslogs
      options:
        awslogs-region: us-east-2
        awslogs-group: Test-logs
        awslogs-stream: frontend

  backend:
    image: 878239241975.dkr.ecr.us-east-2.amazonaws.com/reportautomationbackend-dummy:${BACKEND_TAG}
#    image: 878239241975.dkr.ecr.us-east-2.amazonaws.com/reportautomationbackend-dummy:latest
    container_name: django_automation
    restart: always
    env_file:
      - ./config.env
      - ./db.env
    networks:
      - my_network
    logging:
      driver: awslogs
      options:
        awslogs-region: us-east-2
        awslogs-group: Test-logs
        awslogs-stream: backend

  coreapi:
    image: 878239241975.dkr.ecr.us-east-2.amazonaws.com/theomnilifecoreapi-dummy:${COREAPI_TAG}
#    image: 878239241975.dkr.ecr.us-east-2.amazonaws.com/theomnilifecoreapi-dummy:latest
    container_name: web_dotnet
    restart: always
    environment:
      - DOTNET_CLI_TELEMETRY_OPTOUT=1
      - ASPNETCORE_ENVIRONMENT=PRODUCTION
    env_file:
      - ./db.env
      - ./config.env
    networks:
      - my_network
    logging:
      driver: awslogs
      options:
        awslogs-region: us-east-2
        awslogs-group: Test-logs
        awslogs-stream: coreapi

  tonguecapture:
    image: 878239241975.dkr.ecr.us-east-2.amazonaws.com/omnilife-tonguecapture-dummy:${TONGUE_TAG}
#    image: 878239241975.dkr.ecr.us-east-2.amazonaws.com/omnilife-tonguecapture-dummy:latest
    container_name: web_tonguecapture
    restart: always
    environment:
      - DOTNET_CLI_TELEMETRY_OPTOUT=1
      - ASPNETCORE_ENVIRONMENT=PRODUCTION
    env_file:
      - ./db.env
      - ./config.env
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 2G
    networks:
      - my_network

  activitydashboard:
    image: 878239241975.dkr.ecr.us-east-2.amazonaws.com/activity-dashboard:${ACTIVITY_TAG}
    container_name: activity-dashboard
    restart: always
    environment:
      - ASPNETCORE_URLS=http://0.0.0.0:8080
    env_file:
      - ./config.env
      - ./db.env
    deploy:
      resources:
        limits:
          cpus: "1"
          memory: 512M
    networks:
      - my_network
    logging:
      driver: awslogs
      options:
        awslogs-region: us-east-2
        awslogs-group: Test-logs
        awslogs-stream: activity-dashboard

  reverse_proxy:
    image: caddy:latest
    container_name: caddy
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
    networks:
      - my_network
    depends_on:
      - frontend
      - backend
      - coreapi
      - tonguecapture
      - activitydashboard
networks:
  my_network:
    driver: bridge
